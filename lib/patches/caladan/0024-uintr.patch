From cd69f118f7b26487995f2d118a5f41335e65193a Mon Sep 17 00:00:00 2001
From: Josh Fried <joshuafried@gmail.com>
Date: Sun, 31 Dec 2023 04:21:49 +0000
Subject: [PATCH 24/35] uintr

---
 inc/runtime/preempt.h |  1 +
 inc/runtime/thread.h  |  2 +-
 runtime/preempt.c     | 17 ++++++++++++++++-
 3 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/inc/runtime/preempt.h b/inc/runtime/preempt.h
index bc6e10f6..6c3da71b 100644
--- a/inc/runtime/preempt.h
+++ b/inc/runtime/preempt.h
@@ -13,6 +13,7 @@ DECLARE_PERTHREAD(void *, uintr_stack);
 extern void preempt(void);
 extern void uintr_asm_return(void);
 
+extern bool uintr_enabled;
 extern size_t xsave_max_size;
 extern size_t xsave_features;
 
diff --git a/inc/runtime/thread.h b/inc/runtime/thread.h
index 07557617..689ecf3b 100644
--- a/inc/runtime/thread.h
+++ b/inc/runtime/thread.h
@@ -65,7 +65,7 @@ struct thread {
     bool        in_syscall;
     atomic8_t        interrupt_state;
     struct thread_tf    *entry_regs;
-    unsigned long    junction_tstate_buf[20];
+    unsigned long    junction_tstate_buf[22];
     struct stack        *stack;
     uint16_t        last_cpu;
     uint16_t        cur_kthread;
diff --git a/runtime/preempt.c b/runtime/preempt.c
index de0fd8b7..7f955ead 100644
--- a/runtime/preempt.c
+++ b/runtime/preempt.c
@@ -26,6 +26,8 @@
 
 /* the current preemption count */
 DEFINE_PERTHREAD(unsigned int, preempt_cnt);
+/* whether uintr is enabled */
+bool uintr_enabled;
 /* perthread stack to use supply for UIPIs */
 DEFINE_PERTHREAD(void *, uintr_stack);
 /* maximum size in bytes needed for xsave */
@@ -166,8 +168,20 @@ void preempt(void)
 
 int preempt_init_thread(void)
 {
+	struct stack *s;
+	uint64_t stack_val;
+
 	perthread_store(preempt_cnt, PREEMPT_NOT_PENDING);
-	perthread_store(uintr_stack, (void *)REDZONE_SIZE);
+
+	if (!uintr_enabled)
+		return 0;
+
+	s = stack_alloc();
+	if (!s)
+		return -ENOMEM;
+
+	stack_val = ((uint64_t)&s->usable[STACK_PTR_SIZE]) | 1UL;
+	perthread_store(uintr_stack, (void *)stack_val);
 	return 0;
 }
 
@@ -212,6 +226,7 @@ int preempt_init(void)
 	}
 
 	log_info("uintr: enabled");
+	uintr_enabled = true;
 
 	ret = syscall(SYS_arch_prctl, ARCH_GET_XCOMP_SUPP, &xsave_features);
 	if (unlikely(ret)) {
-- 
2.43.0

